extends layout
block extrahead
  link(rel="stylesheet" href="stylesheets/jsoneditor.min.css")
  link(rel="stylesheet" href="stylesheets/pipeline.css")
  link(rel="stylesheet" href="stylesheets/highcharts.css")
  script(src="javascripts/jsoneditor.min.js" type="text/javascript")
  script(src="javascripts/pipeline.js" type="text/javascript")
  script(src="javascripts/highcharts.js" type="text/javascript")
  script(src="javascripts/highcharts-more.js" type="text/javascript")
  script(src="javascripts/sankey.js" type="text/javascript")
  script(src="javascripts/organization.js" type="text/javascript")

block content
  div.main-container(style="width:100%")
    h2 Pipeline control
    div
      h3 Active pipelines &nbsp;
        i.fas.fa-bell
        table.table.table-hover.table-striped
          thead
            tr
              th Name
              th Process time
              th Latest cycle
              th Last error
              th Silence
              th Stop
              th Restart
          tbody#active_pipelines
            tr
              td(colspan=7) Loading!
      br
      h3 Silent pipelines &nbsp;
        i.fas.fa-bell-slash
        table.table.table-hover.table-striped
          thead
            tr
              th Name
              th Process time
              th Latest cycle
              th Last error
              th Activate
              th Stop
              th Restart
          tbody#silent_pipelines
            tr
              td(colspan=7) Loading!
      br
      h3 Inactive pipelines &nbsp;
        i.fas.fa-hand-paper
        table.table.table-hover.table-striped
          thead
            tr
              th Name
              th Start
          tbody#inactive_pipelines
            tr
              td(colspan=2) Loading!
      br
      p Comments on pipelines:
        ul
          li Cycles: the internal buffers take a few cycles to fill, so there will always be "errors" shortly after pipeline startup. As long as the error number is small and the cycle number isn't, it's fine
          li Timing: It takes of order 10ms to get a value from Influx. If the process time (given in ms) is faster than this, something's not working, and there'll probably be new entries in the logs.
          li Timing: Pipelines only run as fast as the slowest sensor they depend on. If you want a faster pipeline, speed up the sensors.
    div#pipeline_vis

    div.modal#silence_dropdown(style="display:none")
      div.modal_content
        span#silence_me
        span will be silenced until:
        ul
          li
            button.btn.btn-info(onclick="SilencePipeline(30)") 30 minutes
          li
            button.btn.btn-info(onclick="SilencePipeline(120)") 2 hours
          li
            button.btn.btn-info(onclick="SilencePipeline('evening')") 1800 today
          li
            button.btn.btn-info(onclick="SilencePipeline('morning')") 930 tomorrow
          li
            button.btn.btn-info(onclick="SilencePipeline('monday')") Monday morning
          li
            button.btn.btn-danger(onclick="SilencePipeline('forever')") The end of time

  div.main-container
    h2 Pipeline configuration
    span See this wiki page for details: &nbsp;
      a(href="https://wiki.uni-freiburg.de/app/doku.php?id=start:ultimate:slow_control:pipeline_config_ref") here
    div.row(style="height: 50px")
      select.form-control#pipeline_select(title='Select a pipeline')
      button#fetch_pipeline_button.btn.btn-info(onclick="Fetch($('#pipeline_select').val())") Fetch
    br
    div#json_text(style="width:100%;height:75%;resize:both")
    br
    button.btn.btn-warning(onclick="Visualize()") Visualize
    button.btn.btn-info(onclick="AddNewPipeline()") Add new
    button.btn.btn-info(onclick="DeletePipeline(AddNewPipeline)") Update
    span &nbsp;&nbsp;
    button.btn.btn-danger(onclick="DeletePipeline()") Delete (careful)
    br
    span#load_me(hidden disabled) #{load}

  script.
    $(document).ready(function() {
      PopulateDropdown();
      PopulatePipelines();
      document.jsoneditor = new JSONEditor(document.getElementById('json_text',
      {"modes":  ['tree', 'view', 'form', 'code', 'text']}));
      if ($("#load_me").html() != "") {
        Fetch($("#load_me").html());
        $("#load_me").remove();
      }
      setInterval(UpdateLoop, 5000);
    });
    window.onclick = function(event) {
      if (!event.target.matches('.dropbtn')) {
        var elems = document.getElementsByClassName("dropdown-content");
        for (var i = 0; i < elems.length; i++)
          elems[i].style.display='none';
      }
    }
