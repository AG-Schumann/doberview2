doctype html
html
  head
    title=DOBERview
    link(rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon.png")
    link(rel="icon" type="image/png" href="/images/favicon-196x196.png" sizes="196x196")
    link(rel="icon" type="image/png" href="/images/favicon-96x96.png" sizes="96x96")
    link(rel="icon" type="image/png" href="/images/favicon-32x32.png" sizes="32x32")
    link(rel="icon" type="image/png" href="/images/favicon-16x16.png" sizes="16x16")
    link(rel="icon" type="image/png" href="/images/favicon-128.png" sizes="128x128")
    link(rel="stylesheet" href="/stylesheets/bootstrap.min.css")
    link(rel="stylesheet" href="/stylesheets/bootstrap-theme.min.css")
    link(rel='stylesheet' href='/stylesheets/default_style.css')
    script(src="javascripts/jquery-3.6.0.min.js" type="text/javascript")
    script(src="javascripts/default_scripts.js" type="text/javascript")
    script(src="https://kit.fontawesome.com/abb8282784.js" crossorigin="anonymous" type="text/javascript")

    meta(name="application-name" content="pagetitle")

    block extrahead

  body
    div.overlay
    div.wrapper
      div#sidebar_wrapper
        nav#sidebar.colored
          img#exp_logo(src="/images/pancake.png" alt="Pancake" width="65")
          //div.experimentIconDiv(style="margin-top:0px;background:#0e0e75;height:30px;padding-top:5px;padding-left:3px;padding-bottom:5px")
            //i.fas.fa-hamburger
            //span.CTAs(style="float:left;color:white") Experiment
              select.cselect#experiment_select
                option(value="pancake" selected) Pancake
                option(value="xebra") Xebra
                option(value="gemse") GeMSE
          ul.list-unstyled.components
            li#loberview(class="colored")
              a(href="/devices")
                i.fas.fa-dragon
                span Overview
              a(href="/subsystem")
                i.fas.fa-spider
                span Systems
              a(href='/pipeline')
                i.fas.fa-hippo
                span Pipeline
              a(href='/hosts')
                i.fas.fa-cat
                span Hosts
              a(href='/contacts')
                i.fas.fa-crow
                span Shifters
              a(href='/grafana')
                i.fas.fa-frog
                span Grafana
              a(href='/logs')
                i.fas.fa-kiwi-bird
                span Logs
      div#content(style="padding-left:5px;padding-right:5px;padding-top:0px;padding-bottom:0px")
        div.sensorbox.modalbox#sensorbox(style="display:none")
          div.row.modal_content.container
            div.col-md-8
              strong Sensor detail: &nbsp;
              span#detail_sensor_name
              span &nbsp; &nbsp; &nbsp; Device: &nbsp;
                button.small-button#sensor_device_name
              span.btn.top-right(onclick="$('#sensorbox').css('display', 'none')") &times;
              br
              label(for="sensor_desc") Description &nbsp;
              input(type="text" id="sensor_desc" name="sensor_desc" size=30)
              br
              label(for="sensor_status") Active &nbsp;
              input(type="checkbox" id="sensor_status" name="sensor_status")
              span &nbsp;&nbsp; Units: &nbsp;
              span#sensor_units
              br
              label(for="readout_interval") Readout interval &nbsp;
              input(type="number" id="readout_interval" name="readout_interval" max="300" size='4')
              br
              label Alarms
              table
                tr
                  td
                    label(for="alarm_low") Low
                    input(type="number" id="alarm_low" name="alarm_low")
                  td
                    label(for="alarm_mid") Setpoint
                    input(type="number" id="alarm_mid" name="alarm_mid")
                tr
                  td
                    label(for="alarm_high") High
                    input(type="number" id="alarm_high" name="alarm_high")
                  td
                    label(for="alarm_range") Half-range
                    input(type="number" id="alarm_range" name="alarm_range")
                tr
                  td
                    label(for="alarm_recurrence") Recurrence
                    input(type="number" id="alarm_recurrence" name="alarm_recurrence" min="1" step="1")
                  td
                    label(for="alarm_baselevel") Base level
                    input(type="number" id="alarm_baselevel" name="alarm_baselevel" min="0" step="1" max="3")
              br
              button.btn.btn-info(onclick="UpdateSensor()") Update sensor
              br
              br
              label Pipelines involving this sensor:
              ul#pipeline_list
            div.col-md-4.chart_header
              strong Recent history &nbsp; &nbsp;
              br
              label(for="sensor_history") History &nbsp;
              input#sensor_history(type="range" onchange="RangeSliders()" min=0 value=4 style="width:100px")
              span#sensor_history_label
              br
              label(for="sensor_binning") Binning &nbsp;
              input#sensor_binning(type="range" onchange="RangeSliders()" min=0 value=2 style="width:100px")
              span#sensor_binning_label
              br
              label(for="plot_alarms") Show alarms &nbsp;
              input#plot_alarms(type="checkbox")
              br
              button.btn.btn-info#get_data(onclick="DrawSensorHistory()") Update plot
              button.btn.btn-info(onclick="$('#sensorbox').css('display', 'none')") Close
          div.main_container.sensor_chart#sensor_chart
        div.devicebox.modalbox#devicebox(style="display:none")
          div.row.modal_content(style="padding:5px")
            div.main_container
              strong Device detail: &nbsp;
              span#detail_device_name
              strong &nbsp; Status: &nbsp;
              span#detail_device_status
              br
              button.btn.btn-info#device_ctrl_btn(onclick="CtrlDevice()") ?
              span.btn.top-right(onclick="$('#devicebox').css('display','none')") &times;
              br
              form#update_device_form
                label(for="host") Host &nbsp
                input(type="text" id="device_host" name="device_host")
                fieldset#device_eth
                  label(for="device_ip") IP &nbsp
                  input(type="text" id="device_ip" name="device_ip" pattern="^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$")
                  span &nbsp; &nbsp; &nbsp;
                  label(for="device_port") Port &nbsp
                  input(type="number" id="device_port" name="device_port" min="1025" max="65535" step="1")
                fieldset#device_serial
                  label(for="device_tty") TTY &nbsp;
                  input(type="text" id="device_tty" name="device_tty")
                  span &nbsp; &nbsp; &nbsp;
                  label(for="device_baud") Baud &nbsp;
                  select(id="device_baud" name="device_baud")
                    option(value="9600") 9600
                    option(value="19200") 19,200
                  span &nbsp; &nbsp; &nbsp;
                  label(for="device_serial_id") SerialID &nbsp;
                  input(type="text" id="device_serial_id" name="device_serial_id")
                br
                button.btn.btn-info(onclick="UpdateDevice()") Update
              br
              span This device's sensors:
              ul#device_sensors
              br
              span Listens on port &nbsp;
              span#device_listener
              span Accepted commands:
              ul#device_commands_list
              label(for="device_commands") Send a command:
              input(type="text" id="device_commands" name="device_commands")
              button.btn.btn-info(onclick="DeviceCommand()") Send
              br
              button.btn.btn-info(onclick="$('#devicebox').css('display','none')") Close

      block content

    script.
      $(document).ready(()=>{
      });
      window.onclick = function(event) {
        var elems = document.getElementsByClassName("modalbox");
        for (var i = 0; i < elems.length; i++)
          if (event.target == elems[i]) elems[i].style.display = 'none';
        //if (event.target == document.getElementById("sensorbox")) event.target.style.display = 'none';
        //if (event.target == document.getElementById("devicebox")) event.target.style.display = 'none';
      }
