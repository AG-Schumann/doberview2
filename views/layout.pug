doctype html
html
  head
    title=DOBERview
    link(rel="stylesheet" href="/stylesheets/bootstrap.min.css")
    link(rel="stylesheet" href="/stylesheets/bootstrap-theme.min.css")
    link(rel='stylesheet' href='/stylesheets/default_style.css')
    script(src="javascripts/jquery-3.6.0.min.js" type="text/javascript")
    script(src="javascripts/default_scripts.js" type="text/javascript")
    script(src="https://kit.fontawesome.com/abb8282784.js" crossorigin="anonymous" type="text/javascript")

    meta(name="application-name" content="pagetitle")

    block extrahead

  body
    div.overlay
    div.wrapper
      div#sidebar_wrapper
        nav#sidebar.colored
          div.experimentIconDiv(style="margin-top:0px;background:#0e0e75;height:30px;padding-top:5px;padding-left:3px")
            //span.CTAs(style="float:left;color:white") Experiment
              i.fas.fa-hamburger
              select.cselect#experiment_select
                option(value="pancake" selected) Pancake
                option(value="xebra") Xebra
                option(value="gemse") GeMSE
          ul.list-unstyled.components
            li#loberview(class="colored")
              a(href="/sensors")
                i.fas.fa-dragon
                span Overview
                //span.extralabel Main landing page
              a(href="/subsystem")
                i.fas.fa-spider
                span Systems
                //span.extralabel Look at subsystems in detail
              a(href='/pipeline')
                i.fas.fa-hippo
                span Pipeline
                //span.extralabel Configure alarms and pipelines
              a(href='/hosts')
                i.fas.fa-cat
                span Hosts
                //span.extralabel Configure hosts
              a(href='/contacts')
                i.fas.fa-crow
                span Shifters
                //span.extralabel Configure contacts and shifters
              a(href='')
                i.fas.fa-frog
                span Grafana
                //span.extralabel Your own plots, with blackjack and hookers
              a(href='/daq')
                i.fas.fa-kiwi-bird
                span DAQ
                //span.extralabel Eventually
      div#content(style="padding-left:5px;padding-right:5px;padding-top:0px;padding-bottom:0px")
        div.readingbox.modalbox#readingbox(style="display:none")
          div.row.modal_content.container
            div.col-md-8
              strong Reading detail: &nbsp;
              span#detail_reading_name
              span &nbsp; &nbsp; &nbsp; Sensor: &nbsp;
                button.small-button#reading_sensor_name
              span.btn.top-right(onclick="$('#readingbox').css('display', 'none')") &times;
              br
              label(for="reading_desc") Description &nbsp;
              input(type="text" id="reading_desc" name="reading_desc")
              br
              label(for="reading_status") Active &nbsp;
              input(type="checkbox" id="reading_status" name="reading_status")
              br
              label(for="readout_interval") Readout interval &nbsp;
              input(type="number" id="readout_interval" name="readout_interval" max="300" size='4')
              br
              label Alarms
              table
                tr
                  td
                    label(for="alarm_low") Low
                    input(type="number" id="alarm_low" name="alarm_low")
                  td
                    label(for="alarm_mid") Setpoint
                    input(type="number" id="alarm_mid" name="alarm_mid")
                tr
                  td
                    label(for="alarm_high") High
                    input(type="number" id="alarm_high" name="alarm_high")
                  td
                    label(for="alarm_range") Half-range
                    input(type="number" id="alarm_range" name="alarm_range")
                tr
                  td
                    label(for="alarm_recurrence") Recurrence
                    input(type="number" id="alarm_recurrence" name="alarm_recurrence" min="1" step="1")
              br
              button.btn.btn-info(onclick="UpdateReading()") Update reading
              br
              br
              label Pipelines involving this reading:
              ul#pipeline_list
            div.col-md-4.chart_header
              strong Recent history &nbsp; &nbsp;
              br
              label(for="reading_history") History &nbsp;
              input#reading_history(type="range" onchange="RangeSliders()" min=0 value=4 style="width:100px")
              span#reading_history_label
              br
              label(for="reading_binning") Binning &nbsp;
              input#reading_binning(type="range" onchange="RangeSliders()" min=0 value=2 style="width:100px")
              span#reading_binning_label
              br
              button.btn.btn-info#get_data(onclick="DrawReadingHistory()") Update plot
              button.btn.btn-info(onclick="$('#readingbox').css('display', 'none')") Close
          div.main_container.reading_chart#reading_chart
        div.sensorbox.modalbox#sensorbox(style="display:none")
          div.row.modal_content(style="padding:5px")
            div.main_container
              strong Sensor detail: &nbsp;
              span#detail_sensor_name
              span.btn.top-right(onclick="$('#sensorbox').css('display','none')") &times;
              br
              form#update_sensor_form
                fieldset#sensor_eth
                  label(for="sensor_ip") IP &nbsp
                  input(type="text" id="sensor_ip" name="sensor_ip" pattern="^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$")
                  span &nbsp; &nbsp; &nbsp;
                  label(for="sensor_port") Port &nbsp
                  input(type="number" id="sensor_port" name="sensor_port" min="1025" max="65535" step="1")
                fieldset#sensor_serial
                  label(for="sensor_tty") TTY 
                  input(type="text" id="sensor_tty" name="sensor_tty")
                  span &nbsp; &nbsp; &nbsp;
                  label(for="sensor_baud") Baud 
                  select(id="sensor_baud" name="sensor_baud")
                    option(value="9600") 9600
                    option(value="19200") 19,200
                  span &nbsp; &nbsp; &nbsp;
                  label(for="sensor_serial_id") SerialID 
                  input(type="text" id="sensor_serial_id" name="sensor_serial_id")
                button.btn.btn-info(onclick="UpdateSensor()") Update
                br
                span This sensor's readings:
                ul#sensor_readings
                span Accepted commands:
                ul#sensor_commands_list
                label(for="sensor_commands") Send a command:
                input(type="text" id="sensor_commands" name="sensor_commands")
                br
                button.btn.btn-info(onclick="$('#sensorbox').css('display','none')") Close

      block content

    script.
      $(document).ready(()=>{
        let changelowhigh = () => {var low = $("#alarm_low").val(); var high = $("#alarm_high").val(); if (low && high) {$("#alarm_mid").val((high+low)/2); $("#alarm_range").val((high-low)/2);}};
        let changemidrange = () => {var mid = $("#alarm_mid").val(); var range = $("#alarm_range").val(); if (mid && range) {$("#alarm_low").val(mid-range); $("#alarm_high").val(mid+range);}};
        $("#alarm_low").attr('onchange', changelowhigh);
        $("#alarm_high").attr('onchange', changelowhigh);
        $("#alarm_mid").attr('onchange', changemidrange);
        $("#alarm_range").attr('onchange', changemidrange);
      });
      window.onclick = function(event) {
        document.getElementsByClassName("modalbox").forEach(elem => {if (event.target == elem) elem.style.display = 'none';});
        //if (event.target == document.getElementById("readingbox")) event.target.style.display = 'none';
        //if (event.target == document.getElementById("sensorbox")) event.target.style.display = 'none';
      }
